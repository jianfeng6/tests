name: Build op13

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
    
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date \"+%y%m%d\")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install git dwarves libelf-dev ccache automake flex bison build-essential zlib1g-dev libncurses5-dev libc6-dev-i386 bc device-tree-compiler python3 make
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace
    
    - name: Download Clang-aosp
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://git.inferno0230.in/inferno0230/clang-r530567 --depth=1 clang-aosp
        
    
    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone --recursive https://github.com/OnePlusOSS/android_kernel_oneplus_sm8750.git -b sm8750_v_15.0.0_oneplus_13 android-kernel --depth=1
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel/scripts
        sed -i 's/ -dirty//g' setlocalversion

    - name: Setup KernelSU
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next-susfs
        KSU_VERSION=$(cd KernelSU-Next && expr $(/usr/bin/git rev-list --count HEAD) + 10200)
        echo "KSUVER=KSU_$KSU_VERSION" >> $GITHUB_ENV

    - name: Build kernel
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        LTO=thin
        export ARCH=arm64
        export SUBARCH=arm64
        export HEADER_ARCH=arm64
        export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$PATH
        export KBUILD_BUILD_HOST=Github-Action
        export KBUILD_BUILD_USER=$(echo ${{ github.actor }} | tr A-Z a-z)
        AR_CMD="ARCH=${ARCH} SUBARCH=${SUBARCH} HEADER_ARCH=${HEADER_ARCH}"
        BA_CMD="CC=clang CXX=clang++"
        EX_CMD="LD=ld.lld AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump READELF=llvm-readelf OBJSIZE=llvm-size STRIP=llvm-strip LLVM=1 LLVM_IAS=1"
        DEFCONFIG="gki_defconfig vendor/sun_consolidate.config vendor/sun_tuivm.config"
        make O=out $AR_CMD $BA_CMD $EX_CMD $DEFCONFIG
        scripts/config --file out/.config -e LTO_CLANG -d LTO_NONE -e LTO_CLANG_THIN -d LTO_CLANG_FULL -e THINLTO
        make -j$(nproc --all) O=out $AR_CMD $BA_CMD $EX_CMD
    
    - name: Check a kernel output files
      run: |
       cd $GITHUB_WORKSPACE/kernel_workspace
       if [ -f android-kernel/out/arch/arm64/boot/Image ]; then
           echo "CHECK_IMAGE=true" >> $GITHUB_ENV
       else
           echo "Kernel output file is empty"
           exit 1
       fi
      
    - name: Make Anykernel3
      if: env.CHECK_IMAGE == 'true'
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
        rm -rf AnyKernel3/.git
        cp android-kernel/out/arch/arm64/boot/Image AnyKernel3/
    
    - name: Upload Image
      if: env.CHECK_IMAGE == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: Image-${{ env.KSUVER }}
        path: kernel_workspace/android-kernel/out/arch/arm64/boot/Image

    - name: Upload AnyKernel3
      if: env.CHECK_IMAGE == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: AK3-op13-${{ env.KSUVER }}-${{ env.BUILD_TIME }}
        path: kernel_workspace/AnyKernel3/*
