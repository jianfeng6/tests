name: OPlus Kernel

on:
  workflow_dispatch:
  push:
    tags:
      - 'KSUN*.*.*'  # 仅在推送标签匹配 v*.*.* 时触发

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 2160

    permissions:
      contents: write
      actions: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure Git
      run: |
           git config --global user.name "github-actions[bot]"
           git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Clean up disk space
      run: |
        sudo apt-get clean
        sudo rm -rf /usr/share/dotnet /etc/mysql /var/lib/mysql
        sudo rm -rf /usr/local/lib/android
        df -h

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 git curl zip

    - name: Install repo tool
      run: |
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
        chmod a+x ~/repo
        sudo mv ~/repo /usr/local/bin/repo

    - name: Initialize repo and sync
      run: |
        mkdir kernel_workspace && cd kernel_workspace
        repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/sm8550 -m oneplus_ace3_v.xml --depth=1
        repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
        rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
        rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
        sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
        sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion
        sed -i '2s/check_defconfig//' ./kernel_platform/common/build.config.gki
        sed -i '2s/check_defconfig//' ./kernel_platform/msm-kernel/build.config.gki
        repo status
        git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android13-5.15 --depth=1
        git clone https://github.com/WildPlusKernel/kernel_patches.git --depth=1

    - name: Setup build date
      id: date
      run: echo "current-date=$(date +'%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_OUTPUT    


    - name: Setup KernelSU
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/kernel_platform
        curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next-susfs-dev/kernel/setup.sh" | bash -s next-susfs-dev
        cd KernelSU-Next
        KSU_VERSION=$(( $(git rev-list --count HEAD) + 10200 ))
        echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV

    - name: Add SUSFS
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/kernel_platform/common
        cp ../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android13-5.15.patch ./
        cp ../../kernel_patches/next/syscall_hooks.patch ./
        cp ../../kernel_patches/bbr/bbrv3-5.15+.patch ./
        cp ../../susfs4ksu/kernel_patches/fs/* ./fs/
        cp ../../susfs4ksu/kernel_patches/include/linux/* ./include/linux/
        patch -p1 < 50_add_susfs_in_gki-android13-5.15.patch || true
        patch -p1 -F 3 < syscall_hooks.patch
        patch -p1 < bbrv3-5.15+.patch
        
    - name: Build defconfig
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/kernel_platform/
        echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_TMPFS_POSIX_ACL=y" >> ./common/arch/arm64/configs/gki_defconfig
        #echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_WITH_KPOBES=n" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
        #echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
        # Add additional config setting
        echo "CONFIG_TCP_CONG_ADVANCED=y" >> ./common/arch/arm64/configs/gki_defconfig 
        echo "CONFIG_TCP_CONG_BBR=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_NET_SCH_FQ=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_TCP_CONG_BIC=n" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_TCP_CONG_WESTWOOD=n" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_TCP_CONG_HTCP=n" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_IP_NF_TARGET_TTL=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_IP6_NF_TARGET_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
        echo "CONFIG_IP6_NF_MATCH_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
        
    - name: Build kernel
      run: |
        cd kernel_workspace
        LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh kalama gki

    - name: Make AnyKernel3
      run: |
        git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
        rm -rf ./AnyKernel3/.git
        cp kernel_workspace/kernel_platform/out/msm-kernel-kalama-gki/gki_kernel/dist/Image ./AnyKernel3/
        cd AnyKernel3
        zip -r9 ../AnyKernel3-OSS-OPace3-${{ env.KSUVER }}.zip *

    - name: Upload AnyKernel3
      uses: actions/upload-artifact@v4
      with:
        name: AnyKernel3-OSS-OPace3-${{ env.KSUVER }}
        path: ./AnyKernel3-OSS-OPace3-${{ env.KSUVER }}.zip

    - name: Upload kernel Image
      uses: actions/upload-artifact@v4
      with:
        name: Image-OSS-${{ env.KSUVER }}
        path: kernel_workspace/kernel_platform/out/msm-kernel-kalama-gki/gki_kernel/dist/Image

    - name: Upload boot.img
      uses: actions/upload-artifact@v4
      with:
        name: boot-OSS-OPace3.img
        path: kernel_workspace/kernel_platform/out/msm-kernel-kalama-gki/gki_kernel/dist/boot.img

    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      if: ${{ success() }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: KSUN${{ env.KSUVER }}
        name: "Kernelsu-next ${{ env.KSUVER }}"
        draft: false
        prerelease: ${{ contains(github.ref_name, 'rc') }}
        generate_release_notes: true
        body: |
          **Build Details**
          - KernelSU Version: ${{ env.KSUVER }}
          - Build Date: ${{ steps.date.outputs.current-date }}
        files: |
          AnyKernel3-OSS-OPace3-${{ env.KSUVER }}.zip
          kernel_workspace/kernel_platform/out/msm-kernel-kalama-gki/gki_kernel/dist/Image
          kernel_workspace/kernel_platform/out/msm-kernel-kalama-gki/gki_kernel/dist/boot.img