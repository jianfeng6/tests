name: Repack Boot Image via URL

on:
  workflow_dispatch:
    inputs:
      boot_img_url:
        description: 'URL of original boot.img'
        required: true
        default: 'https://example.com/boot.img'
      kernel_img_url:
        description: 'URL of new kernel Image'
        required: true
        default: 'https://example.com/Image'

jobs:
  repack_boot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Workspace
        run: |
          mkdir -p ${{ github.workspace }}/downloads
          mkdir -p ${{ github.workspace }}/output

      - name: Download Magisk (Fixed URL)
        run: |
          # 使用稳定版下载链接
          MAGISK_VERSION="29.0"
          wget -q --show-progress "https://github.com/topjohnwu/Magisk/releases/download/v${MAGISK_VERSION}/Magisk-v${MAGISK_VERSION}.apk" -O magisk.apk
          [ -f magisk.apk ] || { echo "Magisk download failed"; exit 1; }
          echo "Downloaded Magisk size: $(du -h magisk.apk | cut -f1)"

      - name: Extract magiskboot
        run: |
          unzip -j magisk.apk 'lib/x86_64/libmagiskboot.so' -d .
          mv libmagiskboot.so magiskboot
          chmod +x magiskboot
          ./magiskboot --version || { echo "magiskboot提取失败"; exit 1; }

      - name: Download Boot Image
        run: |
          wget --tries=3 --timeout=20 -q --show-progress -O "${{ github.workspace }}/downloads/boot.img" "${{ github.event.inputs.boot_img_url }}"
          [ -s "${{ github.workspace }}/downloads/boot.img" ] || { echo "Boot镜像下载失败"; exit 1; }
          file "${{ github.workspace }}/downloads/boot.img" | grep -q "Android bootimg" || { echo "无效的boot镜像文件"; exit 1; }

      - name: Download Kernel Image
        run: |
          wget --tries=3 --timeout=20 -q --show-progress -O "${{ github.workspace }}/downloads/Image" "${{ github.event.inputs.kernel_img_url }}"
          [ -s "${{ github.workspace }}/downloads/Image" ] || { echo "内核下载失败"; exit 1; }
          file "${{ github.workspace }}/downloads/Image" | grep -q "Linux kernel" || { echo "无效的内核文件"; exit 1; }

      - name: Unpack Boot Image
        run: |
          ./magiskboot unpack "${{ github.workspace }}/downloads/boot.img"
          [ -f split_img/kernel ] || { echo "解包失败，未找到kernel文件"; exit 1; }
          echo "原内核信息："
          md5sum split_img/kernel

      - name: Replace Kernel
        run: |
          cp -v "${{ github.workspace }}/downloads/Image" split_img/kernel
          echo "新内核校验："
          file split_img/kernel
          md5sum split_img/kernel

      - name: Repack Boot Image
        run: |
          ./magiskboot repack "${{ github.workspace }}/downloads/boot.img"
          [ -f new-boot.img ] || { echo "重新打包失败"; exit 1; }
          mv -v new-boot.img "${{ github.workspace }}/output/repacked_boot.img"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: custom_boot_image
          path: ${{ github.workspace }}/output/repacked_boot.img